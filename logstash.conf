input {
  tcp {
    port => "${LOGSTASH_PORT}"
    codec => json {
      target => "parsed_json"
    }
  }
  udp {
    port => "${LOGSTASH_PORT}"
    codec => json {
      target => "parsed_json"
    }
  }
}

filter {
  json {
    source => message
    target => "parsed_json"
  }

  if [sessionId] =~ "00000000" {
    grok {
      match => { "[dateTime]" => "%{TIMESTAMP_ISO8601:log_timestamp}" }
      add_tag => "imap-logs"
    }
    date {
      match => [ "log_timestamp", "ISO8601" ]
      target => "@timestamp"
      timezone => "Europe/London"
      add_tag => "Time successfully mutated - imapTime"
    }    
  }

  if [ClientSoftware] == "CiscoCollabHost.exe" {
    grok {
      match => { "[DateTime]" => "%{TIMESTAMP_ISO8601:log_timestamp}" }
      add_tag => "Time successfully matched"
    }
    date {
      match => [ "log_timestamp", "ISO8601" ]
      target => "@timestamp"
      timezone => "Europe/London"
      add_tag => "Time successfully mutated - mapiTime"
    }
  }

  if [ClientSoftware] == "OUTLOOK.EXE" {
    mutate {
      add_tag => "mapihttp-logs"
    }
  } else {
    mutate {
      add_tag => "not a mapi log"
    }
  }

  if [RoutingStatus] == "CafeV1" {
    mutate {
      add_tag => "httpproxy-logs"
    }
  } else {
    mutate {
      add_tag => "not a httpproxy log"
    }
  }

  if 'mapihttp-logs' in [tags] {
    grok {
      match => { "[DateTime]" => "%{TIMESTAMP_ISO8601:log_timestamp}" }
      add_tag => "Time successfully matched"
    }
    date {
      match => [ "log_timestamp", "ISO8601" ]
      target => "@timestamp"
      timezone => "Europe/London"
      add_tag => "Time successfully mutated - mapiTime"
    }
  }

  if 'httpproxy-logs' in [tags] {
    grok {
      match => { "[DateTime]" => "%{TIMESTAMP_ISO8601:log_timestamp}" }
      add_tag => "Time successfully matched"
    }
    date {
      match => [ "log_timestamp", "ISO8601" ]
      target => "@timestamp"
      timezone => "Europe/London"
      add_tag => "Time successfully mutated - httpproxy"
    }
  }
}

output {
  if 'imap-logs' in [tags] {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOSTS}"
      index => "imap-logs-%{+YYYY.MM.dd}"
    }
  } 
  else if 'mapihttp-logs' in [tags] {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOSTS}"
      index => "mapihttp-logs-%{+YYYY.MM.dd}"
    }
  }
  else if "httpproxy-logs" in [tags] {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOSTS}"
      index => "httpproxy-logs-%{+YYYY.MM.dd}"
    }    
  } else {
  elasticsearch {
      hosts => "${ELASTICSEARCH_HOSTS}"
      index => "powershell-logstash-%{+YYYY.MM.dd}"
    }
  }
}